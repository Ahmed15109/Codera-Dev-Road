<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            padding: 20px;
            background-color: #f8f9fa;
        }

        .form-container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }

        h2 {
            color: #4361ee;
            margin-bottom: 20px;
            text-align: center;
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
        }

            .btn-success:hover {
                background-color: #218838;
                border-color: #1e7e34;
            }

        .is-invalid {
            border-color: #dc3545;
        }

        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.875em;
            color: #dc3545;
        }

        .was-validated .form-control:invalid ~ .invalid-feedback,
        .was-validated .form-control:invalid ~ .invalid-tooltip,
        .form-control.is-invalid ~ .invalid-feedback,
        .form-control.is-invalid ~ .invalid-tooltip {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Edit Profile</h2>

        <form id="editForm" class="needs-validation" novalidate>
            <input type="hidden" id="UserId" name="UserId">

            <div class="form-group mb-3">
                <label for="FullName">Full Name</label>
                <input type="text" class="form-control" id="FullName" name="FullName" required>
                <div class="invalid-feedback">
                    Please provide a valid full name.
                </div>
            </div>

            <div class="form-group mb-3">
                <label for="Email">Email</label>
                <input type="email" class="form-control" id="Email" name="Email" required>
                <div class="invalid-feedback">
                    Please provide a valid email address.
                </div>
            </div>

            <div class="form-group mb-3">
                <label for="Password">Password</label>
                <input type="password" class="form-control" id="Password" name="Password"
                       minlength="8" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$">
                <div class="invalid-feedback">
                    Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.
                </div>
                <small class="form-text text-muted">
                    Leave blank to keep current password
                </small>
            </div>

            <div class="form-group mb-3">
                <label for="Picture">Profile Picture URL</label>
                <input type="url" class="form-control" id="Picture" name="Picture">
                <div class="invalid-feedback">
                    Please provide a valid URL.
                </div>
            </div>

            <div class="form-group mb-4">
                <label for="RoleId">Role</label>
                <select class="form-control" id="RoleId" name="RoleId" required>
                    <option value="">Select Role</option>
                    <option value="1">Admin</option>
                    <option value="2">User</option>

                </select>
                <div class="invalid-feedback">
                    Please select a role.
                </div>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> Save
                </button>
                <button type="button" class="btn btn-secondary" id="cancelBtn">
                    <i class="fas fa-times"></i> Cancel
                </button>
            </div>
        </form>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Validation Script -->
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';

            // Fetch the form we want to apply validation to
            const form = document.getElementById('editForm');

            // Fetch all inputs we want to apply custom validation styles to
            const inputs = form.querySelectorAll('.form-control');

            // Loop over them and prevent submission
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);

            // Add real-time validation
            inputs.forEach(input => {
                input.addEventListener('input', function () {
                    if (input.checkValidity()) {
                        input.classList.remove('is-invalid');
                        input.classList.add('is-valid');
                    } else {
                        input.classList.remove('is-valid');
                        input.classList.add('is-invalid');
                    }
                });
            });

            // Cancel button functionality
            document.getElementById('cancelBtn').addEventListener('click', function () {
                window.location.href = 'profile.html'; // Change to your actual profile page URL
            });

            // Load user data (simulated - in real app would come from API)
            function loadUserData() {
                // Simulated user data
                const user = {
                    UserId: "123",
                    FullName: "Mohamed Gamal",
                    Email: "mohamed@example.com",
                    Picture: "mohamed.jpg",
                    RoleId: "2"
                };

                document.getElementById('UserId').value = user.UserId;
                document.getElementById('FullName').value = user.FullName;
                document.getElementById('Email').value = user.Email;
                document.getElementById('Picture').value = user.Picture;
                document.getElementById('RoleId').value = user.RoleId;
            }

            // Load data when page loads
            loadUserData();
        })();
    </script>
</body>
</html>